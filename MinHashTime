
public class MinHashTime {
	
	public static long[] timer(String folder, int numPermutations) {
		return timer(new MinHash(folder, numPermutations));
	}
	
	
	public static long[] timer(MinHash m){
		long timeStamp0 = System.currentTimeMillis();
		for(int i = 0; i < m.allSes().length; i++){
			for(int j = i + 1; j < m.allSes().length; j++){
				m.exactJaccard(m.allSes()[i], m.allSes()[j]);
			}
		}
		long timeStamp1 = System.currentTimeMillis();
		for(int i = 0; i < m.allSes().length; i++){
			for(int j = i + 1; j < m.allSes().length; j++){
				m.approximateJaccard(m.allSes()[i], m.allSes()[j]);
			}
		}
		long timeStamp2 = System.currentTimeMillis();
		
		long[] time = new long[3];
		time[0] = timeStamp1 - timeStamp0;
		time[1] = m.minHashGenerationTime();
		time[2] = timeStamp2 - timeStamp1;
		return time;
	}
}
